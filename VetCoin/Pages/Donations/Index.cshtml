@page
@model IndexModel
@inject Services.UrlQueryService UrlQueryService
@inject Codes.SiteContext SiteContext
@inject Data.ApplicationDbContext DbContext

@{
    ViewBag.HostBlazor = true;
    ViewData["Title"] = "Index";
    var query = Model.DonationQuery.OrderByDescending(c=>c.CreateDate);
    UrlQueryService.DefaultSortDirection = Services.SortDirection.Descending;
    UrlQueryService.RowsPerPage = 10;
    var pageUrlContext = UrlQueryService.GetPageUrlContext(query);
    var pageItems = UrlQueryService.PageRows(query);
    var pagerContext = pageUrlContext.GetPagerContext();
    var displayNameEntity = new VetCoin.Data.Donation();

    var ids = pageItems.Select(c => c.Id);
    var countDic = DbContext.Donations
            .AsQueryable()
            .Where(c => ids.Contains(c.Id))
            .Select(c => new
            {
                Id = c.Id,

                VoteCount = c.DonationLikeVotes.Count(),
                IsVoted = c.DonationLikeVotes.Any(c => c.VetMemberId == Model.UserContext.CurrentUser.Id)
            }).ToDictionary(c => c.Id);

}

<h1>寄付・クラファン (β機能)</h1>

<form class="form-inline" method="get">
    <div class="form-group mb-2">
        <input type="text" class="form-control" asp-for="SearchKey" placeholder="検索">
    </div>
    <button type="submit" class="btn btn-primary mb-2">検索</button>
</form>
<p>
    <a asp-page="Create" class="btn btn-primary">新規募集</a>
</p>
<partial name="PageNavi" model="pagerContext" />
<table class="table">
    <thead>
        <tr>
            <th></th>
            <th>
                <a href="@pageUrlContext.GetSortUrlFor(s=>s.Title)">
                    @Html.DisplayNameFor(model => displayNameEntity.Title)
                </a>
            </th>
            <th>
            </th>
            <th>
                <a href="@pageUrlContext.GetSortUrlFor(s=>s.VetMember)">
                    @Html.DisplayNameFor(model => displayNameEntity.VetMember)
                </a>
            </th>
            <th>現在の支援額</th>
            <th>支援者数</th>
            <th></th>
            <th>
                <a href="@pageUrlContext.GetSortUrlFor(s=>s.CreateDate)">
                    @Html.DisplayNameFor(model => displayNameEntity.CreateDate)
                </a>
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in pageItems)
        {
            //var ncD = item.Doners.Where(c => c.DonerState != Data.DonerState.Cancel).ToArray();

            var donners = item.Doners.Where(c => c.DonerState != Data.DonerState.Cancel)
                .Where(c => c.VetMemberId != item.VetMemberId).ToArray();

            var sum = donners.Sum(c => c.Amount);
            var numOfDonner = donners.Select(c => c.VetMemberId).Distinct().Count();
            var countInfo = countDic[item.Id];
        <tr>
            <td>
                <a asp-page="./Details" asp-route-id="@item.Id" class="btn btn-primary">確認</a>
            </td>
            <td>
                <a asp-page="./Details" asp-route-id="@item.Id">@Html.DisplayFor(modelItem => item.Title)</a>
            </td>
            <td>
                <component type="typeof(VetCoinWasm.Pages.LikeVote)"
                           render-mode="WebAssemblyPrerendered"
                           param-IsVoted="countInfo.IsVoted"
                           param-TargetId="item.Id"
                           param-VoteCount="countInfo.VoteCount"
                           param-VoteTarget="@("Donation")" />
            </td>
            <td>
                <partial name="MemberTag" model="item.VetMember" />
            </td>
            <td>
                @sum @SiteContext.CurrenryUnit
            </td>
            <td>
                @numOfDonner 人
            </td>
            <td>
                @Html.DisplayFor(c => item.DonationState)
            </td>
            <td>
                @Html.DisplayFor(c => item.CreateDate)
            </td>
        </tr>
        }
    </tbody>
</table>
<partial name="PageNavi" model="pagerContext" />
